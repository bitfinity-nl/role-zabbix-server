---
# Title: Zabbix server install Ubuntu
#
# Author: bitfinity-nl
# Owner: bitfinity-nl
#
# File: tasks/ubuntu/zabbix-server-install-ubuntu.yml
#
# Description:
#   Taskfile for deploying Zabbix server on Ubuntu.
#

- name: "Install MariaDB server '{{ item.mariadb_docker_version }}' via docker for Zabbix '{{ item.version }}' on host '{{ ansible_hostname }}'"
  ansible.builtin.include_role:
    name: role-mariadb-docker
    
- name: "Install dependencies for Zabbix"
  ansible.builtin.apt:
    name: "{{ dependencies_apt.name }}"
    state: present
  loop:
    - { name: 'locales' }
  loop_control:
    loop_var: dependencies_apt

- name: "Ensure multiple locales exist on host '{{ ansible_hostname }}'"
  community.general.locale_gen:
    name: "{{ locale.name }}"
    state: present
  loop: "{{ zabbix_server_locales }}"
  loop_control:
    loop_var: locale

- name: "Download & Install Zabbix {{ item.version }} deb package from '{{ item.ubuntu_source }}' on host '{{ ansible_hostname }}'"
  ansible.builtin.apt:
    deb: "{{ item.ubuntu_source }}"
    state: present

- name: "Update & Upgrade APT repositories on host '{{ ansible_hostname }}'"
  ansible.builtin.apt:
    upgrade: dist
    
- name: "Install Zabbix components {{ item.version }} via APT on host '{{ ansible_hostname }}'"
  ansible.builtin.apt:
    name: "{{ packages.name }}"
    state: present
    update_cache: yes
  loop:
    - { name: 'zabbix-server-mysql', desc: 'Zabbix server' }
    - { name: 'zabbix-sql-scripts', desc: 'Zabbix SQL-scripts' }
    - { name: 'snmp', desc: 'SNMP' }
    - { name: 'snmp-mibs-downloader', desc: 'SNMP mibs downloadder' }
    - { name: 'zabbix-frontend-php', desc: 'Zabbix frontend' }
    - { name: 'zabbix-apache-conf', desc: 'Zabbix Apache configuration' }
    - { name: 'zabbix-sql-scripts', desc: 'Zabbix SQL scripts' }
  loop_control:
    loop_var: packages
    
- name: "Create initial database on host '{{ ansible_hostname }}' in docker container 'mariadb' on host '{{ ansible_hostname }}'"
  community.mysql.mysql_db:
    name: "{{ zabbix_server_dbname }}"
    encoding: utf8mb4
    collation: utf8mb4_bin
    state: present
    login_host: "127.0.0.1"
    login_user: "{{ zabbix_server_administrative_user }}"
    login_password: "{{ zabbix_server_administrative_pass }}"
  no_log: true

- name: "Create initial database user on host '{{ ansible_hostname }}' in docker container 'mariadb' on host '{{ ansible_hostname }}'"
  community.mysql.mysql_user:
    name: "{{ zabbix_server_dbuser }}"
    password: "{{ zabbix_server_dbpass }}"
    priv: "{{ zabbix_server_dbname }}.*:ALL,GRANT"
    state: present
    login_host: "127.0.0.1"
    login_user: "{{ zabbix_server_administrative_user }}"
    login_password: "{{ zabbix_server_administrative_pass }}"
  notify:
    - mariadb_disable_global_log_bin_trust_function_creators
    - mariadb_import_database_schema
    - convert_database
    - mariadb_enable_global_log_bin_trust_function_creators
    - systemd_enable_start_zabbix-server
  no_log: True

- name: "Copy MariaDB / MySQL database schema to the docker container"
  community.docker.docker_container_copy_into:
    container: mariadb
    path: /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
    container_path: /zabbix_server.sql.gz
  register: zabbix_server_script
  
- name: "Transfer templates to {{ ansible_hostname }} on host '{{ ansible_hostname }}'"
  template:
    src: "{{ zabbix_template.src }}"
    dest: "{{ zabbix_template.dest }}"
    owner: "{{ zabbix_template.owner }}"
    group: "{{ zabbix_template.group }}"
    mode: "{{ zabbix_template.mode }}"
    backup: yes
  loop:
    - { src: 'templates/zabbix_server.conf.j2', dest: '/etc/zabbix/zabbix_server.conf', owner: 'root', group: 'root', mode: '0600' }
  loop_control:
    loop_var: zabbix_template
  notify:
    - systemd_restart_zabbix-server
    
- name: "Allow traffic from Zabbix server to Zabbix Agent (Passive on port 10050/tcp) on host '{{ ansible_hostname }}'"
  community.general.ufw:
    rule: allow
    port: "{{ ufw.port }}"
    proto: "{{ ufw.proto }}"
  loop:
    - { port: '10050', proto: 'tcp', desc: 'Allow traffic from Zabbix server to Zabbix Agent (Passive) on port 10050/tcp' }
  loop_control:
    loop_var: ufw
